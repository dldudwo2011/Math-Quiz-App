/*  
       
    Purpose:  Implement a modularized menu-driven program that allows a
              user to answer math questions on addition, subtraction, multiplication, and division.

    Input: userChoice (char) and userAnswer (int)

    Process: Step1 - Write the following methods
             
             * PromptForIntegerValue - Prompt and return a valid int value entered by the user.
             
             * PromptForDoubleValue - Prompt and return a valid double value entered by the user.
              
             * CheckAnswer - Writes a message to the screen indicating if the user answer is correct or incorrect 
                             and return a boolean flag indicating if the user answer is correct.

             * AskAdditionQuestion - Generates two random numbers between minValue and maxValue,
                                     calculate the correct answer to the addition question,
                                     prompt the user for their answer to the addition question,
                                     then returns the results of calling the CheckAnswer method.

             * AskSubtractionQuestion - Generates two random numbers between minValue and maxValue,
                                        swap the two randomers if the first number is less than the second number,
                                        calculate the correct answer to the subtraction question,
                                        prompt the user for their answer to the subtraction question,
                                        then returns the result of calling the CheckAnswer method.

             * AskMultiplicationQuestion - Generates two random numbers between minValue and maxValue
                                           calculate the correct answer to the multiplication question,
                                           prompt the user for their answer to the multiplication question,
                                           then returns the result of calling the CheckAnswer method.

             * AskDivisionQuestion - Generates two random numbers between minValue and maxValue
                                     calculate the correct answer to the division question rounded to 1 decimal place,
                                     prompt the user for their answer to the division question,
                                     then returns the result of calling the CheckAnswer method.

             * DisplayMenuChoices - Write the menu choices to the screen.
             
             * PromptForMenuChoice - Prompt and return a valid menu choice.
 
              Building instruction for each method
            
             * PromptForIntegerValue - The parameter will be a string value that will be displayed on the screen to prompt the user to answer. It will be a math question
                                       and the parameter will be named "prompt". Inside the method, use Console.WriteLine to display the message and create an int variable named
                                       userAnswer to store the user-input. Then write a return statement that returns the value of the userAnswer variable.

             * PromptForDoubleValue - Will be the same as PromptForIntegerValue except the userAnswer variable will be of type double

             * CheckAnswer - There will be 2 parameters, one double variable named "correctAnswer" and another double variable named "userAnswer".
                             It will compare the two variables using an if statement and display a message "Correct!" if they match. Then, it will return a boolean value of "true".
                             If the two parameters are different, it will be handled in an else statement that displays a message "Incorrect! The correct answer is [correctAnswer]". Then,
                             it will return a boolean value of "false".

             * AskAdditionQuestion - There will be 3 parameters, one is a random object named "rand, one is an int variable named "minValue", the other is an int variable named "maxValue".
                                     Inside the method, a bool variable named stop will be created and set to false. It will be used for a while loop. 

                                     Then, create a bool variable named "finalOutcome" and set it to true. 

                                     Then, create two int variables that will store 2 random int numbers generated by the random object. Name them rand1 and rand2 respectively. Then, use random.next() method to assign a random integer to
                                     each of them. Then create an int variable named "correctAnswer" which will store the answer to the addition question. Then create a string variable named prompt that 
                                     will store a string value that represents an addition question. Then create a while loop that operates while the stop variable is not true. Inside the loop, will be
                                     a try statement that will handle the invalid input error. Write a corresponding catch statement and it will display a message "Invalid input value. Try again."
                                     Inside the try statement, call the PromptForIntegerValue method. The prompt variable will be the parameter of it. Then, assign the return value of the method in an int
                                     variable named userAnswer. After, call the CheckAnswer method and put the correctAnswer and userAnswer variables as its parameters. Assign its return value to
                                     the finalOutcome variable. Then, set the quit variable to true to end the loop. After the loop is ended, write a return statement that returns the final outcome
                                     variable.
           
             * AskSubtractionQuestion - This will be the same as the AskAdditionQuestion method except it is a subtraction
             
             * AskMultiplicationQuestion - This will be the same as the AskAdditionQuestion method except it is a multiplication.
             
             * AskDivisionQuestion - This will be the same as the AskAdditionQuestion method except it is a division and uses the PromptForDoubleValue method instead of the PromptForIntegerValue
                                     method. Also, some of the variable types will be double instead of the type int. It will also implement methods of the Math class to round the correctAnswer to 1 
                                     decimal place.
            
             * DisplayMenuChoices - There will be no parameter for this method. Use Console.WriteLine method to display the menu.
             
             * PromptForMenuChoice - There will be no parameter for this method. Use Console.WriteLine method to display a message "Enter a letter for your choice:". Then create a char variable
                                     named "userInput" to store the user-input. After, write a return statement that makes the method return the value of the variable "userInput".
                
             step 2- use each of them to build the program
                   
                     In the main method, set a bool variable named "quit" that will be used for a while loop. Then instantiate a random object to be used for the methods. Also, create
                     TotalAnswer and CorrectAnswer variable and set them to 0. They will be used as a counter for the number of the total answer and correct answer.
               
                     Then, create a while loop that operates while the quit variable is false. Inside the while loop, implement a try and catch block. It will be used to handle an invalid input
                     error. Inside the catch block, write a Console.WriteLine method that displays a message "Invalid input value. Try again.". Inside the try block, call the DisplayMenuChoices method.
                     Then, call the PromptForMenuChoice method. Store the value of the method in a char variable named "userChoice". Then write a switch statement that will handle each case of the
                     user choice. 

                        case 'a' will be the addition question, it will call the AskAdditionQuestion method. Then, it will store its value in a bool variable named "check". Then, write two
                        if statements that will handle the true and false case for the check variable. If the check variable is true, it will increment the TotalAnswer and CorrectAnswer by 1. 
                        If the check variable is false, it will increment the TotalAnswer variable only, by 1.
                        
                        case 's' will be the subtraction question, it will be the same as a case 'a' except it uses the AskSubtractionQuestion method

                        case 'm' will be the multiplication question, it will be the same as a case 'a' except it uses the AskMultiplicationQuestion method

                        case 'd' will be the division question, it will be the same as a case 'a' except it uses the AskDivisionQuestion method
                    
                        case 'v' will be displaying the literal message “You have not answered any questions yet” if the user has not answered any questions yet. Do this by writing an if statement.
                        Otherwise display "Your current score is [(CorrectAnswer / TotalAnswer) * 100]% (CorrectAnswer/TotalAnswer)" by using Console.WriteLine method and the round method from the
                        Math class.

                        case 'e' will write the literal message “Goodbye and thanks for playing" and set the quit equals to true.

                        Then, set the default of the case to display a message "Invalid input value. Try again." to handle other invalid inputs.


      Output: 1. "Enter a letter for your choice:"
              
              2. "What is [number] [operator] [number] = ?"
             
              3. "Correct!" or "Incorrect! The correct answer is [correctAnswer]" or "Invalid input value. Try again." 

      Test plan
      
     *  Test case 1: addition
     *  Test data: "a" for selection, "[right answer]" for the answer,
     *  Expected result: Correct!
     *  
     *  Test case 2: subtraction
     *  Test data: "s" for selection, "[right answer]" for the answer,
     *  Expected result: Correct!
     *  
     *  Test case 3: multiplication
     *  Test data: "m" for selection, "[right answer]" for the answer,
     *  Expected result: Correct!
     *  
     *  Test case 4: division
     *  Test data: "d" for selection, "[right answer]" for the answer,
     *  Expected result: Correct!
     * 
     *  Test case 5: addition(Wrong answer)
     *  Test data: "a" for selection, "[wrong answer]" for the answer,
     *  Expected result: "Incorrect! The correct answer is [correctAnswer]"
     *  
     *  Test case 6: subtraction(Wrong answer)
     *  Test data: "s" for selection, "[wrong answer]" for the answer,
     *  Expected result: "Incorrect! The correct answer is [correctAnswer]"
     *  
     *  Test case 7: multiplication(Wrong answer)
     *  Test data: "m" for selection, "[wrong answer]" for the answer,
     *  Expected result: "Incorrect! The correct answer is [correctAnswer]"
     *  
     *  Test case 8: division(Wrong answer)
     *  Test data: "d" for selection, "[wrong answer]" for the answer,
     *  Expected result: "Incorrect! The correct answer is [correctAnswer]"
     *  
     *  Test case 9: addition(Invalid input)
     *  Test data: "a" for selection, "[Invalid input]" for the answer,
     *  Expected result: "Invalid input value. Try again."
     *  
     *  Test case 10: subtraction(Invalid input)
     *  Test data: "s" for selection, "[Invalid input]" for the answer,
     *  Expected result: "Invalid input value. Try again."
     *  
     *   Test case 11: multiplication(Invalid input)
     *  Test data: "m" for selection, "[Invalid input]" for the answer,
     *  Expected result: "Invalid input value. Try again."
     *  
     *   Test case 12: division(Invalid input)
     *  Test data: "d" for selection, "[Invalid input]" for the answer,
     *  Expected result: "Invalid input value. Try again."
         
         Test case 13: Current score 1
         Test data: "v" for selection
         Expected result: “You have not answered any questions yet”

         Test case 13: Current score 2 (If user did some questions)
         Test data: "v" for selection
         Expected result: "Your current score is [(CorrectAnswer / TotalAnswer) * 100]% (CorrectAnswer/TotalAnswer)"
      
         Test case 14: quit
         Test data: "e" for selection
         Expected result: “Goodbye and thanks for playing"

         Test case 15: menu invalid input
         Test data: "[Invalid input]" for selection
         Expected result: "Invalid input value. Try again."
*/
using System;

namespace CPSC1012_Exercise05_Youngjae_Lee
{

    class Program
    {
        //declaring the PromptForIntegerValue method
        static int PromptForIntegerValue(string prompt)
        {
            //setting a variable to store the user-input
            int integerValue = 0;

            //valid input indicator
            bool validInput = false;

            //asking the user for an input
            Console.WriteLine(prompt);

            //while loop declaration
            while (!validInput)
            {

                //storing the user-input to the validInput variable and validate
                validInput = int.TryParse(Console.ReadLine(), out integerValue);

                //if there is an error
                if (!validInput)
                {
                    //output
                    Console.WriteLine("Invalid input! You must enter an integer value for the answer");
                }
            }

            //returning the value of the integerValue variable
            return integerValue;
        }
    

        //declaring the PromptForDoubleValue method
        static double PromptForDoubleValue(string prompt)
        {
            //setting a variable to store the user-input
            double doubleValue = 0;

            //valid input indicator
            bool validInput = false;

            //asking the user for an input
            Console.WriteLine(prompt);

            //while loop declaration
            while (!validInput)
            {

                //storing the user-input to the validInput variable and validate
                validInput = double.TryParse(Console.ReadLine(), out doubleValue);

                //if there is an error
                if (!validInput)
                {
                    //output
                    Console.WriteLine("Invalid input! You must enter a double value for the answer");
                }
            }

        //returning the value of the doubleValue variable
        return doubleValue;


    }

        //declaring the CheckAnswer method
        static bool CheckAnswer(double correctAnswer, double userAnswer)
        {
            //setting the finalOutcome variable
            bool finalOutcome;

            //if the user is correct
            if(correctAnswer == userAnswer)
            {
                //output
                Console.WriteLine("Correct!");

                //setting final outcome to true
                finalOutcome = true;
            }

            //if the user answer is incorrect
            else
            {
                //output
                Console.WriteLine($"Incorrect! The correct answer is {correctAnswer}");

                //setting final outcome to false
                finalOutcome = false;
            }

            //returning the value of the finalOutcome variable
            return finalOutcome;
        }

        //declaring the AskAdditionQuestion method
        static bool AskAdditionQuestion(Random rand, int minValue, int maxValue)
        {

            //setting final outcome variable
            bool finalOutcome;


            //generating 2 random numbers and store them
            int rand1 = rand.Next(minValue, maxValue + 1);
            int rand2 = rand.Next(minValue, maxValue + 1);

            //storing the correct answer
            int correctAnswer = rand1 + rand2;


            //storing the question
            string prompt = $"What is {rand1} + {rand2} = ?";

            //calling the PromptForIntegerValue method and storing its return value to the userAnswer variable
            int userAnswer = PromptForIntegerValue(prompt);

            //comparing the answers and storing its result to the finalOutcome variable
            finalOutcome = CheckAnswer(correctAnswer, userAnswer);

            //returning final out come
            return finalOutcome;
        }

        //declaring the AskSubtractionQuestion method
        static bool AskSubtractionQuestion(Random rand, int minValue, int maxValue)
        {
            //setting final outcome variable
            bool finalOutcome;


            //generating 2 random numbers and store them
            int rand1 = rand.Next(minValue, maxValue + 1);
            int rand2 = rand.Next(minValue, maxValue + 1);

            //storing the correct answer
            int correctAnswer = rand1 - rand2;


            //storing the question
            string prompt = $"What is {rand1} - {rand2} = ?";

            //calling the PromptForIntegerValue method and storing its return value to the userAnswer variable
            int userAnswer = PromptForIntegerValue(prompt);

            //comparing the answers and storing its result to the finalOutcome variable
            finalOutcome = CheckAnswer(correctAnswer, userAnswer);

            //returning final out come
            return finalOutcome;
        }

        //declaring the AskMultiplicationQuestion method
        static bool AskMultiplicationQuestion(Random rand, int minValue, int maxValue)
        {

            //setting final outcome variable
            bool finalOutcome;


            //generating 2 random numbers and store them
            int rand1 = rand.Next(minValue, maxValue + 1);
            int rand2 = rand.Next(minValue, maxValue + 1);

            //storing the correct answer
            int correctAnswer = rand1 * rand2;


            //storing the question
            string prompt = $"What is {rand1} * {rand2} = ?";

            //calling the PromptForIntegerValue method and storing its return value to the userAnswer variable
            int userAnswer = PromptForIntegerValue(prompt);

            //comparing the answers and storing its result to the finalOutcome variable
            finalOutcome = CheckAnswer(correctAnswer, userAnswer);

            //returning final out come
            return finalOutcome;
        }

        //declaring the AskDivisionQuestion method
        static bool AskDivisionQuestion(Random rand, int minValue, int maxValue)
        {
            //setting final outcome variable
            bool finalOutcome;


            //generating 2 random numbers and store them
            double rand1 = rand.Next(minValue, maxValue + 1);
            double rand2 = rand.Next(minValue, maxValue + 1);

            //storing the correct answer
            double correctAnswer = Math.Round((rand1 / rand2), 1);


            //storing the question
            string prompt = $"What is {rand1} / {rand2} = ? (rounded to 1 decimal place)";
            
            //calling the PromptForDoubleValue method and storing the return value
            double userAnswer = PromptForDoubleValue(prompt);

            //storing the final out come
            finalOutcome = CheckAnswer(correctAnswer, userAnswer);

            //returning final out come
            return finalOutcome;
        }

        //declaring the DisplayMenuChoices method
        static void DisplayMenuChoices()
        {
            //displaying the menu
            Console.WriteLine("Math Quiz");
            Console.WriteLine("-----------------------------------------------------");
            Console.WriteLine("a) Addition Question");
            Console.WriteLine("s) Subtraction Question");
            Console.WriteLine("m) Multiplication Question");
            Console.WriteLine("d) Division Question");
            Console.WriteLine("v) View Quiz Results");
            Console.WriteLine("e) Exit Program");
        }

        //declaring the PromptForMenuChoice method
        static char PromptForMenuChoice()
        {
            //setting the user-input
            char userInput = '0';

            //setting the valid input variable
            bool validInput = false;

            //asking the user for an input
            Console.WriteLine("Enter a letter for your choice:");

            //while loop declaration
            while (!validInput)
            {
                try
                {
                    //storing the user-input in the userInput variable
                    userInput = char.Parse(Console.ReadLine());

                    //valid input 1
                    if (userInput == 'a')
                    {
                        validInput = true;
                    }

                    //valid input 2
                    else if (userInput == 's')
                    {
                        validInput = true;
                    }

                    //valid input 3
                    else if (userInput == 'm')
                    {
                        validInput = true;
                    }

                    //valid input 4
                    else if (userInput == 'd')
                    {
                        validInput = true;
                    }

                    //valid input 5
                    else if (userInput == 'v')
                    {
                        validInput = true;
                    }

                    //valid input 6
                    else if (userInput == 'e')
                    {
                        validInput = true;
                    }

                    //if not valid input, output is an error message
                    else
                    {
                        Console.WriteLine("Invalid input value. Try again.");
                    }
                }
                catch
                {
                    //output
                    Console.WriteLine("Invalid input value. Try again.");
                }

            }

            //returning the value of the userInput variable
            return userInput;
        }




            static void Main(string[] args)
        {
            //setting quit variable to false
            bool quit = false;

            //instantiating a random class
            Random rand = new Random();

            //setting min and max number
            const int MinNumber = 1;
            const int MaxNumber = 99;

            //setting counter
            double TotalAnswer = 0;
            double CorrectAnswer = 0;

            //declaring a while loop
            while (!quit)
            {

                        //calling the DisplayMenuChoices method
                        DisplayMenuChoices();

                        //storing the user-input
                        char userChoice = PromptForMenuChoice();

                        //declaring a switch statement
                        switch (userChoice)
                        {
                            //if the user selects the addition question
                            case 'a':
                                {
                                    //calling the AskAdditionQuestion method and storing its return value
                                    bool check = AskAdditionQuestion(rand, MinNumber, MaxNumber);

                                    //if the return value is true
                                    if (check == true)
                                    {
                                        //increment the counters
                                        TotalAnswer++;
                                        CorrectAnswer++;
                                        break;
                                    }

                                    //if the return value is false
                                    else
                                    {
                                        //increment the TotalAnswer only
                                        TotalAnswer++;
                                        break;
                                    }
                                }

                            //if the user selects the subtraction question
                            case 's':
                                {
                                    //calling the AskSubtractionQuestion method and storing its return value
                                    bool check2 = AskSubtractionQuestion(rand, MinNumber, MaxNumber);

                                    //if the return value is true
                                    if (check2 == true)
                                    {
                                        //increment the counters
                                        TotalAnswer++;
                                        CorrectAnswer++;
                                        break;
                                    }

                                    //if the return value is false
                                    else
                                    {
                                        //increment the TotalAnswer only
                                        TotalAnswer++;
                                        break;
                                    }
                                }


                            //if the user selects the multiplication question
                            case 'm':
                                {
                                    //calling the AskMultiplicationQuestion method and storing its return value
                                    bool check3 = AskMultiplicationQuestion(rand, MinNumber, MaxNumber);

                                    //if the return value is true
                                    if (check3 == true)
                                    {
                                        //increment the counters
                                        TotalAnswer++;
                                        CorrectAnswer++;
                                        break;
                                    }

                                    //if the return value is false
                                    else
                                    {
                                        //increment the TotalAnswer only
                                        TotalAnswer++;
                                        break;
                                    }
                                }


                            //if the user selects the division question
                            case 'd':
                                {
                                    //calling the AskDivisionQuestion method and storing its return value
                                    bool check4 = AskDivisionQuestion(rand, MinNumber, MaxNumber);

                                    //if the return value is true
                                    if (check4 == true)
                                    {
                                        //increment the counters
                                        TotalAnswer++;
                                        CorrectAnswer++;
                                        break;
                                    }

                                    //if the return value is false
                                    else
                                    {
                                        //increment the TotalAnswer only
                                        TotalAnswer++;
                                        break;
                                    }
                                }

                            //if the user selects "View Quiz Results"
                            case 'v':
                                {
                                    //if the user has not answered
                                    if (TotalAnswer == 0)
                                    {
                                        //output
                                        Console.WriteLine("You have not answered any questions yet");
                                        break;
                                    }

                                    //if the user has answered before
                                    else
                                    {
                                        //output
                                        Console.WriteLine($"Your current score is {Math.Round((CorrectAnswer / TotalAnswer) * 100)}% ({CorrectAnswer}/{TotalAnswer}).");
                                        break;
                                    }
                                }

                            //if the user selects "Exit Program"
                            case 'e':
                                {
                                    //saying good-bye
                                    Console.WriteLine("Goodbye and thanks for playing");

                                    //setting quit to true
                                    quit = true;
                                    break;
                                }

                            //handling invalid input 
                            default:
                                {
                                    //output
                                    Console.WriteLine("Invalid input value. Try again.");
                                    break;
                                }
                        }
                    }
               
            }
           
        }
    }

